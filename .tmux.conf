# Prefix
unbind-key C-b
set-option -g prefix C-t
bind-key t send-prefix

## old setting
# bind C-r source-file ~/.tmux.conf

# clipbord: http://koseki.hatenablog.com/entry/20110816/TmuxCopy
# set-option -g default-command "reattach-to-user-namespace -l zsh"
#set-option -g default-command "/opt/local/bin/reattach-to-user-namespace zsh"
# bind C-q run-shell 'reattach-to-user-namespace tmux-pbcopy'
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"
#bind C-q run-shell 'reattach-to-user-namespace tmux-pbcopy'
# bind C-q copy-pipe 'reattach-to-user-namespace tmux-pbcopy'

# clipbord:  http://qiita.com/upinetree/items/cd80bc7865c520
## Use vim keybindings in copy mode
#setw -g mode-keys vi

## Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
## old setting end

# set-option -g default-command "reattach-to-user-namespace -l zsh"
# bind-key -t emacs-copy M-w copy-pipe 'reattach-to-user-namespace pbcopy'


## osx specific
if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l zsh"'
# if-shell 'test "$(uname -s)" = Darwin' 'bind-key -T copy-mode M-w send-keys -X copy-pipe-and-cancel \'reattach-to-user-namespace pbcopy\''

if-shell "type pbcopy >/dev/null 2>&1" "bind-key -T copy-mode M-w send-keys -X copy-pipe-and-cancel \'reattach-to-user-namespace pbcopy'"

## For Cygwin
if-shell 'test "$(uname -s)" = CYGWIN_NT-6.1' 'bind-key -T copy-mode C-w send-keys -X copy-pipe-and-cancel "iconv -s -t SJIS | putclip"'


# if-shell 'test "$(uname -s)" = CYGWIN_NT-6.1' 'bind-key -t vi-copy y copy-pipe "iconv -s -t SJIS | putclip";'
# if-shell 'test "$(uname -s)" = CYGWIN_NT-6.1' 'bind-key -t vi-copy enter copy-pipe "iconv -s -t SJIS | putclip";'

# if-shell 'test "$(uname -s)" = Darwin' 'source-file ~/.tmux-osx.conf'

# mouse scroll
set-window-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# directry
# bind c new-window -c '#{pane_current_path}'
bind % split-window -hc "#{pane_current_path}"
bind '"' split-window -vc "#{pane_current_path}"
